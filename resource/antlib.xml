<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<antlib xmlns:if="ant:if" xmlns:unless="ant:unless">

	<!--
		Iterator function to run a given macro against a set of files

		@param toDir - The output location of the files
		@param dir  - The location of the files to process
		@param macro - A macro to run.
		@param fileset - A set of files
	-->

	<scriptdef language="javascript" name="iterate">
		<attribute name="toDir"/>
		<attribute name="dir"/>
		<attribute name="macro"/>
		<element name="fileset" type="fileset"/>
<![CDATA[


var dir = attributes.get("dir");
var toDir = attributes.get("todir");
var filesets = elements.get("fileset");
var macro = attributes.get("macro");

for (i = 0; i < filesets.size(); ++i) {
    fileset = filesets.get(i);
    scanner = fileset.getDirectoryScanner(project);
    scanner.scan();
    files = scanner.getIncludedFiles();
    for( j=0; j < files.length; j++) {
		task = project.createTask(macro);
		if (files[i] !== "") {
	        try {
	        	task.setDynamicAttribute("src", files[j]);
	        	task.setDynamicAttribute("dir", dir);
	        	task.setDynamicAttribute("toDir", toDir);
	            task.execute();
	        } catch(err) {
	            task.log( "Execution error: " + err.message );
	        }
		}
	}
}

]]>
	</scriptdef>


	<!--
		Iterator function to run a given macro against a set of files

		@param toDir - The output location of the files
		@param dir  - The location of the files to process
		@param macro - A macro to run.
		@param fileset - A set of files
	-->
	<scriptdef language="javascript" name="tidy-dita">
		<attribute name="file"/>
<![CDATA[

var pluginDir =  project.getProperty("dita.plugin.fox.jason.pretty-dita.dir");

var file = attributes.get("file");
var dir = attributes.get("dir");

eval('' + org.apache.tools.ant.util.FileUtils.readFully(
      new java.io.FileReader(pluginDir + '/resource/pretty.js' ) ) );

var dita = org.apache.tools.ant.util.FileUtils.readFully(
				new java.io.FileReader( file));
var tidy = Prettify.analyseDITA(dita);
Prettify.writeDITA(file, tidy);

]]>
	</scriptdef>

	<!--
		Prettify an directory containing DITA files

		@param toDir - The output location of the files
		@param dir  - The location of the files to process
		@param refid - The reference to a fileset
	-->
	<macrodef name="prettify-files">
		<attribute name="toDir"/>
		<attribute name="dir"/>
		<attribute name="refid"/>
		<sequential>
			<iterate macro="prettify-file" dir="@{dir}" todir="@{toDir}" >
				<fileset refid="@{refid}"/>
			</iterate>
		</sequential>
	</macrodef>


	<!--
		Prettify an individual DITA file

		@param toDir - The output location of the files
		@param dir  - The location of the files to process
		@param src - A file to prettify
	-->
	<macrodef name="prettify-file">
		<attribute name="src"/>
		<attribute name="dir"/>
		<attribute name="toDir"/>
		<sequential>

			<xmlcatalog id="fake.dita.catalog">
				<dtd publicId="-//OASIS//DTD DITA Topic//EN" location="${dita.plugin.fox.jason.pretty-dita.dir}/resource/fake.dtd"/>
				<dtd publicId="-//OASIS//DTD DITA Map//EN" location="${dita.plugin.fox.jason.pretty-dita.dir}/resource/fake.dtd"/>
				<dtd publicId="-//OASIS//DTD DITA BookMap//EN" location="${dita.plugin.fox.jason.pretty-dita.dir}/resource/fake.dtd"/>
				<dtd publicId="-//OASIS//DTD DITA DITAVAL//EN" location="${dita.plugin.fox.jason.pretty-dita.dir}/resource/fake.dtd"/>
				<dtd publicId="-//OASIS//DTD DITA Concept//EN" location="${dita.plugin.fox.jason.pretty-dita.dir}/resource/fake.dtd"/>
				<dtd publicId="-//OASIS//DTD DITA Task//EN" location="${dita.plugin.fox.jason.pretty-dita.dir}/resource/fake.dtd"/>
			</xmlcatalog>


			<local name="copy.file"/>

			<tempfile deleteonexit="true" destdir="${dita.temp.dir}" property="copy.file"/>
			<xslt force="true" in="@{dir}/@{src}" out="${copy.file}" style="${dita.plugin.fox.jason.pretty-dita.dir}/xsl/pretty.xsl">
				<xmlcatalog refid="fake.dita.catalog"/>
			</xslt>

			<tidy-dita file="${copy.file}"/>
			<copy file="${copy.file}" tofile="@{toDir}/@{src}"/>

		</sequential>
	</macrodef>


</antlib>